<UserControl x:Class="SP2013Access.Controls.SPClientTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:viewModels="clr-namespace:SP2013Access.ViewModels"
             xmlns:extensions="clr-namespace:SP2013Access.Extensions"
             xmlns:commands="clr-namespace:SP2013Access.Commands">
    <UserControl.Resources>
        <Style x:Key="OpenSiteLinkButton" TargetType="Button">
            <EventSetter Event="Click" HandledEventsToo="True" Handler="LoadSiteButton_Click" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock>
                            <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#FF0066CC" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="DodgerBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <DockPanel>
        <TreeView ItemsSource="{Binding Children}" extensions:TreeViewExtensions.SelectItemOnRightClick="True">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="BorderBrush" Value="DodgerBlue" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.Resources>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="Transparent" Offset="0" />
                    <GradientStop Color="Transparent" Offset="1" />
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFEEEDED" Offset="0" />
                    <GradientStop Color="#FFDDDDDD" Offset="1" />
                </LinearGradientBrush>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

                <HierarchicalDataTemplate DataType="{x:Type viewModels:TreeViewItemViewModel}"
                                          ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="{Binding ImageSource}" Margin="3,0" />
                        <TextBlock x:Name="TreeViewItemLabel" Text="{Binding Name}" />
                        <TextBlock x:Name="loading" Visibility="Hidden" Width="0" Text="Loading ..." Foreground="Gray"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0" />
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Refresh" Click="MenuItem_Refresh">
                                    <MenuItem.Icon>
                                        <Image Source="pack://application:,,,/images/Refresh.png" />
                                    </MenuItem.Icon>
                                    <MenuItem.Style>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=HasDummyChild}" Value="True" />
                                                        <Condition Binding="{Binding Path=IsLoaded}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsBusy}" Value="True" />
                                                        <Condition Binding="{Binding Path=IsLoaded}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsBusy}" Value="False" />
                                                        <Condition Binding="{Binding Path=IsLoaded}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </MenuItem.Style>
                                </MenuItem>
                                <MenuItem Click="MenuItem_Expand">
                                    <MenuItem.Style>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsExpanded}" Value="True">
                                                    <Setter Property="Header" Value="Collapse" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
                                                    <Setter Property="Header" Value="Expand" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsBusy}" Value="True" />
                                                        <Condition Binding="{Binding Path=IsLoaded}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsBusy}" Value="False" />
                                                        <Condition Binding="{Binding Path=IsLoaded}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="{Binding HasChildren}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </MenuItem.Style>
                                </MenuItem>
                                <MenuItem Header="_Action" ItemsSource="{Binding Commands}" StaysOpenOnClick="True">
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Header" Value="{Binding Path=Name}" />
                                            <Setter Property="Command" Value="{Binding Path=Command}" />
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                    <MenuItem.Style>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Style.Triggers>
                                                <Trigger Property="HasItems" Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </MenuItem.Style>
                                </MenuItem>
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                    </StackPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsBusy}" Value="True" />
                                <Condition Binding="{Binding Path=IsLoaded}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="loading" Property="Visibility" Value="Visible" />
                                <Setter TargetName="loading" Property="Width" Value="Auto" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsBusy}" Value="False" />
                                <Condition Binding="{Binding Path=IsLoaded}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="loading" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
            <TreeView.Style>
                <Style TargetType="TreeView">
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TreeView">
                                        <StackPanel Orientation="Vertical" Margin="5,5">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Width="16" Height="16" Margin="3,0"
                                                       Source="pack://application:,,,/images/Warning.PNG"
                                                       VerticalAlignment="Top" />
                                                <TextBlock Text="There are no sites" />
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Width="16" Height="16" Margin="3,0"
                                                       Source="pack://application:,,,/images/SubSite.png"
                                                       VerticalAlignment="Top" />
                                                <Button x:Name="LoadSiteButton" Margin="3,0" Content="Load Site"
                                                        Cursor="Hand" Style="{StaticResource OpenSiteLinkButton}" />
                                            </StackPanel>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Style>
        </TreeView>
    </DockPanel>
</UserControl>